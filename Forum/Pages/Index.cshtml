@page
@model IndexModel
@{
    ViewData["Title"] = "Index";
    var username = Request.Cookies[Constants.UsernameAuthCookie];
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>
<body>
    <div class="container-fluid">
        <main>
            <div class="row">
                <div class="col-12">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            @if (string.IsNullOrWhiteSpace(username))
                            {
                                <h2>Willkommen zum Forum!</h2>
                            }
                            else
                            {
                                <h2>Willkommen zum Forum, @username!</h2>
                            }
                            <p>Hier kannst du an Diskussionen teilnehmen, Fragen stellen und mehr!</p>
                        </div>

                        <div>
                            @if (Model.IsAuthenticated)
                            {
                                <div class="dropdown">
                                    <button class="btn btn-primary dropdown-toggle" type="button" id="dashboardDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        Dashboard
                                    </button>
                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dashboardDropdown">
                                        <a class="dropdown-item" href="#" data-toggle="modal" data-target="#createEntryModal">📝 Beitrag erstellen</a>

                                        <a class="dropdown-item" href="/Settings">⚙️ Einstellungen</a>
                                        <form method="post" asp-page-handler="Logout" class="dropdown-item p-0">
                                            <button type="submit" class="btn btn-link dropdown-item">🚪 Abmelden</button>
                                        </form>
                                    </div>
                                </div>

                                <div class="modal fade" id="createEntryModal" tabindex="-1" role="dialog" aria-labelledby="createEntryModalLabel" aria-hidden="true">
                                    <div class="modal-dialog" role="document">
                                        <form method="post" asp-page-handler="CreateEntry" class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="createEntryModalLabel">Neuen Beitrag erstellen</h5>
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Schließen">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div class="modal-body">
                                                <div class="form-group">
                                                    <label for="entryTitle">Titel</label>
                                                    <input type="text" class="form-control" id="entryTitle" name="Title" required />
                                                </div>
                                                <div class="form-group">
                                                    <label for="entryText">Text</label>
                                                    <textarea class="form-control" id="entryText" name="Text" rows="4" required style="resize: vertical; max-width: 100%; max-height: 65vh; overflow: auto;"></textarea>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Abbrechen</button>
                                                <button type="submit" class="btn btn-primary">Beitrag erstellen</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <a href="/Login" class="btn btn-success">Anmelden</a>
                            }
                        </div>
                    </div>

                    <div id="entry-list" class="mt-4">
                    </div>

                    <div id="loading" class="text-center py-4" style="display: none;">
                        <span class="spinner-border text-primary"></span> Beiträge werden geladen...
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <script>
        const pageSize = 10;

        let loading = false;
        let noMore = false;

        async function loadEntries() {
            if (loading || noMore) return;
            loading = true;
            document.getElementById("loading").style.display = "block";

            const response = await fetch(`?handler=Entries`);
            const entries = await response.json();

            if (entries.length < pageSize) {
                noMore = true;
            }

            const container = document.getElementById("entry-list");
            for (const e of entries) {
                    const date = new Date(e.entry.createdAt);
                    const formattedDate = date.toLocaleString('de-DE', {
                        day: '2-digit',
                        month: '2-digit',
                        year: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit'
                    });

                    const div = document.createElement("div");
                    div.className = "card mb-3";
                    div.innerHTML = `
                        <div class="card-body">
                            <h5 class="card-title">${e.entry.title}</h5>
                            <h6 class="card-subtitle mb-2 text-muted">von ${e.username} am ${formattedDate}</h6>
                            <p class="card-text">${e.entry.text}</p>
                        </div>`;
                    container.appendChild(div);
            }

            document.getElementById("loading").style.display = "none";
            loading = false;
        }

        window.addEventListener("scroll", () => {
            if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 200) {
                loadEntries();
            }
        });

        loadEntries();

    </script>
</body>
</html>

@if (TempData[Constants.AlertMessage] is not null)
{
    <script>alert('@TempData[Constants.AlertMessage]!.ToString()');</script>
}